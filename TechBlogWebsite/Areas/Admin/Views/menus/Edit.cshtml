@model TechBlogWebsite.Models.menu

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayoutPage1.cshtml";
}
<style>
    .edit-heading {
        font-size: 2rem;
        font-weight: bold;
        color: #007bff; /* Màu xanh nước biển */
        text-transform: uppercase;
    }
</style>
<h2 class="text-center edit-heading">Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card bg-light">
                    <div class="card-header bg-info text-white">
                        <h3 class="card-title mb-0">Menu Information</h3>
                    </div>
                    <div class="card-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ID)

                        <div class="form-group">
                            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-user"></i></span>
                                </div>
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" }, id = "name" })
                            </div>
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.link, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-link"></i></span>
                                </div>
                                @Html.EditorFor(model => model.link, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.link, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-info-circle"></i></span>
                                </div>
                                @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" }, id = "meta" })
                            </div>
                            @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.order, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="fas fa-sort-numeric-up"></i></span>
                                        </div>
                                        @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.datebegin, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                        </div>
                                        @Html.EditorFor(model => model.datebegin, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.datebegin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="form-check">
                                @Html.EditorFor(model => model.hide, new { htmlAttributes = new { @class = "form-check-input" } })
                                @Html.LabelFor(model => model.hide, htmlAttributes: new { @class = "form-check-label" })
                                @Html.ValidationMessageFor(model => model.hide, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-light">
                        <div class="text-center">
                            <input type="submit" value="Save" class="btn btn-success" />
                            @Html.ActionLink("Back to List", "Table", "Default", null, new { @class = "btn btn-secondary" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section _Footer
{
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $("#name").keyup(function () {
                var text = $.trim($(this).val().toLowerCase());
                var text_create;
                text_create = text.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a").replace(/\ /g, '-').replace(/đ/g, "d").replace(/đ/g, "d").replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y").replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u").replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ.+/g, "o").replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ.+/g, "e").replace(/ì|í|ị|ỉ|ĩ/g, "i");
                $('#meta').val(text_create);
            }).keyup();
        });
    </script>
}
