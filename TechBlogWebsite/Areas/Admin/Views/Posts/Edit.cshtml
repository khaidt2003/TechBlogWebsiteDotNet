@model TechBlogWebsite.Models.Post

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayoutPage1.cshtml";
}

<div class="container py-4 text-center" style="background-color: #fff7d6;">
    <h2 class="text-center mb-4">Edit Post</h2>
</div>

@using (Html.BeginForm("Edit", "Posts", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-10 offset-md-1">
            <div class="card">
                <div class="card-body">

                    <h4 class="card-title">Post Information</h4>
                    <hr />

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.PostID)

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", id = "Title" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Content, new { @class = "form-control", rows = 6, placeholder = "Enter content", id = "txtContent" })
                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.AuthorID, "AuthorID", htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.DropDownList("AuthorID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AuthorID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.PublishedDate, htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PublishedDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PublishedDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.FeaturedImage, htmlAttributes: new { @class = "col-md-3 col-form-label text-primary" })
                        <div class="col-md-9">
                            <div class="col-md-6">
                                <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" />
                            </div>
                            <div class="col-md-4">
                                <img src="~/Content/upload/@Model.FeaturedImage" width="100px" />
                            </div>
                            @Html.ValidationMessageFor(model => model.FeaturedImage, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ViewCount, htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ViewCount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ViewCount, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Meta, htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Meta, new { htmlAttributes = new { @class = "form-control" }, id = "Meta" })
                            @Html.ValidationMessageFor(model => model.Meta, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Hide, htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            <div class="form-check">
                                @Html.EditorFor(model => model.Hide, new { htmlAttributes = new { @class = "form-check-input" } })
                                @Html.LabelFor(model => model.Hide, htmlAttributes: new { @class = "form-check-label" })
                                @Html.ValidationMessageFor(model => model.Hide, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.DateBegin, htmlAttributes: new { @class = "col-md-2 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateBegin, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateBegin, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="form-group row mt-3">
        <div class="col-md-10 offset-md-1">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
}

@section _Footer
{
    <script src="~/Areas/Admin/Content/ckfinder/ckfinder.js"></script>
    <script src="~/Areas/Admin/Content/ckeditor/ckeditor.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace("txtContent");
        var editor = CKEDITOR.replace("txtContent", { height: '400px' });
        customConfig: '/Areas/admin/Content/ckeditor/config.js';
    </script>
    <script type="text/javascript">
        $(function () {
            $("#Title").keyup(function () {
                var text = $.trim($(this).val().toLowerCase());
                var text_create;
                text_create = text.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a").replace(/\ /g, '-').replace(/đ/g, "d").replace(/đ/g, "d").replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y").replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u").replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ.+/g, "o").replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ.+/g, "e").replace(/ì|í|ị|ỉ|ĩ/g, "i");
                $('#Meta').val(text_create); // Gán giá trị mới vào phần tử có id là "Meta"
            }).keyup();
        });
    </script>

}

<div class="container text-center">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary mt-3" })
</div>
