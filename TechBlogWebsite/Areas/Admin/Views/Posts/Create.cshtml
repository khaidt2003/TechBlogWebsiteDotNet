@model TechBlogWebsite.Models.Post

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayoutPage1.cshtml";
}

<div class="container py-5 text-center" style="background-color: #fff7d6;">
    <h2 class="text-dark font-weight-bold">CREATE POST</h2>
</div>


@using (Html.BeginForm("Create", "Posts", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label text-primary" })
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter title" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.AuthorID, "Author", htmlAttributes: new { @class = "control-label text-primary" })
                    @Html.DropDownList("AuthorID", new SelectList(ViewBag.Authors as List<SelectListItem>, "Value", "Text"), new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.AuthorID, "", new { @class = "text-danger" })
                    <input type="hidden" name="AuthorID" value="@ViewBag.CurrentAuthorID" />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label text-primary" })
                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control", rows = 6, placeholder = "Enter content", id = "txtContent" })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryID, "Category", htmlAttributes: new { @class = "control-label text-primary" })
                    @Html.DropDownList("CategoryID", null, "Select Category", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label text-primary" })
                    @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter tags" } })
                    @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">


            <div class="form-group row">
                <div class="col-md-9">
                    <div class="col-md-6">
                        <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" />
                    </div>
                    @Html.ValidationMessageFor(model => model.FeaturedImage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="row">

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Meta, htmlAttributes: new { @class = "control-label text-primary" })
                    @Html.EditorFor(model => model.Meta, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter meta" } })
                    @Html.ValidationMessageFor(model => model.Meta, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Hide, htmlAttributes: new { @class = "control-label text-primary" })
                    <div class="checkbox">
                        <label>
                            @Html.EditorFor(model => model.Hide)
                            Hide
                        </label>
                    </div>
                    @Html.ValidationMessageFor(model => model.Hide, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-md-12">
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        </div>
    </div>
}

@section _Footer
{
    <script src="~/Areas/Admin/Content/ckfinder/ckfinder.js"></script>
    <script src="~/Areas/Admin/Content/ckeditor/ckeditor.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace("txtContent");
        var editor = CKEDITOR.replace("txtContent", { height: '400px' });
        customConfig: '/Areas/admin/Content/ckeditor/config.js';
    </script>
    <script type="text/javascript">
        $(function () {
            $("#Title").keyup(function () {
                var text = $.trim($(this).val().toLowerCase());
                var text_create;
                text_create = text.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a").replace(/\ /g, '-').replace(/đ/g, "d").replace(/đ/g, "d").replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y").replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u").replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ.+/g, "o").replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ.+/g, "e").replace(/ì|í|ị|ỉ|ĩ/g, "i");
                $('#Meta').val(text_create); // Gán giá trị mới vào phần tử có id là "Meta"
            }).keyup();
        });
    </script>

}
<div class="container text-center">
    @Html.ActionLink("Back to List", "Index")
</div>